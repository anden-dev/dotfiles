#!/bin/zsh



# HOME/bin first then homebrew, other later
export PATH="$HOME/bin:$PATH";
export PATH="/opt/homebrew/bin:$PATH"


autoload -Uz compinit bashcompinit
if [ $(date +'%j') != $(/usr/bin/stat -f '%Sm' -t '%j' ${ZDOTDIR:-$HOME}/.zcompdump) ]; then
	compinit
	bashcompinit
else
	compinit -C
	bashcompinit -C
fi

# Execute code in the background to not affect the current session
{
	# Compile zcompdump, if modified, to increase startup speed.
	zcompdump="${ZDOTDIR:-$HOME}/.zcompdump"
	if [[ -s "$zcompdump" && (! -s "${zcompdump}.zwc" || "$zcompdump" -nt "${zcompdump}.zwc") ]]; then
		zcompile "$zcompdump"
	fi
} &!

# old slow approach
#autoload -U +X bashcompinit && bashcompinit
#autoload -U +X compinit && compinit

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
# shellcheck disable=SC1090
[ -f ~/.localrc ] && . ~/.localrc

unset TMPDIR

# your default editor
export EDITOR='vim'
export VEDITOR='code'
export VISUAL=$EDITOR

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# shortcut to this dotfiles path is $DOTFILES
export DOTFILES="$HOME/.dotfiles"

# all of our zsh files
typeset -U config_files
config_files=($DOTFILES/*/*.zsh)

tmpfile=$(mktemp /tmp/zshrc.XXXXXX)
echo '#!/usr/bin/env zsh' > "$tmpfile"

# load everything but completion
for file in ${(M)config_files:#*/completion.zsh}; do
	grep -vE "^#|^$" "$file" >> "$tmpfile"
done

# add antigen plugins
grep -vE "^#|^$" ~/.zsh_plugins.sh >> $tmpfile
grep -vE "^#|^$" $(brew --prefix asdf)/asdf.sh >> $tmpfile

source "$tmpfile"
rm "$tmpfile"

# load every completion after autocomplete loads
for file in ${(M)config_files:#*/completion.zsh}; do
	source "$file"
done

unset config_files updated_at

# ref: https://github.com/junegunn/fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'
# you can also trigger by command **
# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
	fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
	fd --type d --hidden --follow --exclude ".git" . "$1"
}
# ref https://github.com/junegunn/fzf/wiki/examples

# disable not found
unsetopt nomatch

# python nightmare
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init --path)"

if command -v pyenv 1>/dev/null 2>&1; then
	eval "$(pyenv init -)"
fi


# #desired_python_version="3.9.4"
# #current_python_version="$(python --version | awk '{print $2}')"
# #if [[ "$current_python_version" != "$desired_python_version" ]]; then
# #  pyenv install "$desired_python_version"
# #  pyenv global "$desired_python_version"
# #fi


# ugly woraround to use pinned yq
export PATH="/opt/homebrew/opt/yq@3/bin:$PATH"


eval "$(direnv hook zsh)"

### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
export PATH="/Users/engl.andreas/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)
export PATH="/opt/homebrew/sbin:$PATH"
export HISTSIZE=1000000000
export SAVEHIST=$HISTSIZE
setopt EXTENDED_HISTORY

# https://starship.rs/
eval "$(starship init zsh)"
export STARSHIP_CACHE=~/.starship/cache

export VF_TF_VERSION_DIR="$HOME/.terraform.versions"
PATH="/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"
