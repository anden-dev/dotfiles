#!/usr/bin/env bash

zmodload zsh/zprof
export ZSH_COMPDUMP=$ZSH/cache/.zcompdump-$HOST

PATH_HOME="$HOME/bin"

OS="$(uname)"

export HOMEBREW_HOME="/opt/homebrew"

if [[ "${OS}" == "Linux" ]]; then
  export HOMEBREW_HOME="/home/linuxbrew/.linuxbrew" #linux
fi

if [[ "${OS}" == "Darwin" ]]; then
  export HOMEBREW_HOME="/opt/homebrew"
fi


PATH_HOMEBREW_BIN="$HOMEBREW_HOME/bin"
PATH_HOMEBREW_SBIN="$HOMEBREW_HOME/sbin"

PATH_HOMEBREW_GNUBIN="$HOMEBREW_HOME/opt/gnu-sed/libexec/gnubin"
PATH_HOMEBREW_GNUTAR="$HOMEBREW_HOME/opt/gnu-tar/libexec/gnubin"
PATH_HOMEBREW_FINDUTILS="$HOMEBREW_HOME/opt/findutils/libexec/gnubin"
PATH_HOMEBREW_UTIL_LINUX_BIN="$HOMEBREW_HOME/opt/util-linux/bin"
PATH_HOMEBREW_UTIL_LINUX_SBIN="$HOMEBREW_HOME/opt/util-linux/sbin"



source $HOMEBREW_HOME/opt/asdf/libexec/asdf.sh
export PATH="$PATH_HOME:$PATH_HOMEBREW_BIN:$PATH_HOMEBREW_SBIN:$PATH_HOMEBREW_GNUBIN:$PATH_HOMEBREW_GNUTAR:$PATH_HOMEBREW_FINDUTILS:$PATH_HOMEBREW_UTIL_LINUX_BIN:$PATH_HOMEBREW_UTIL_LINUX_SBIN:$PATH_HOMEBREW_YQ:$PATH"

export EDITOR='vim'
export VEDITOR='code'
export VISUAL=$EDITOR
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export DOTFILES="$HOME/.dotfiles"

export VF_TF_VERSION_DIR="$HOME/.terraform.versions"


export BAT_CONFIG_PATH="$HOME/.bat.conf"

export STARSHIP_CACHE="$HOME/.starship/cache"
export SHELL_SESSIONS_DISABLE=1



export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'


# for debugging of slow startup tines
zsh_time_startup() {
  shell=${1-$SHELL}
  for i in $(seq 1 10); do /usr/bin/time $shell -i -c exit; done
}

#source "$HOME/.dotfiles/bin/bash-cache.sh"
# shellcheck disable=SC1035,SC1072
function source_all_the_things() {

  # use .localrc for SUPER SECRET CRAP that you don't
  # want in your public, versioned repo.
  [[ -f "$HOME/.localrc" ]] && source "$HOME/.localrc"

  # # ref: https://github.com/junegunn/fzf
  [[ -f "$HOME/.fzf.zsh" ]] && source "$HOME/.fzf.zsh"

  # add antigen plugins
  [[ -f "$HOME/.zsh_plugins.sh" ]] && source "$HOME/.zsh_plugins.sh"

  # asdf
  home_asdf="$(brew --prefix asdf)"
  [[ -f "$home_asdf/asdf.sh" ]] && source "$home_asdf/asdf.sh"


  # all of our zsh files
  typeset -U config_files
  config_files=($DOTFILES/*/*.zsh)

  # load everything but the path and completion files
  for file in ${${config_files:#*/path.zsh}:#*/completion.zsh}; do
    source "$file"
  done

  autoload -Uz compinit bashcompinit
  if [[ "${OS}" == "Darwin" ]]; then
    if [ $(date +'%j') != $(/usr/bin/stat -f '%Sm' -t '%j' ${ZDOTDIR:-$HOME}/.zcompdump) ]; then
      compinit
      bashcompinit
    else
      compinit -C
      bashcompinit -C
    fi
  else
    compinit -C
    bashcompinit -C
  fi

  # Execute code in the background to not affect the current session

  {

    # Compile zcompdump, if modified, to increase startup speed.
    zcompdump="${ZDOTDIR:-$HOME}/.zcompdump"
    if [[ -s "$zcompdump" && (! -s "${zcompdump}.zwc" || "$zcompdump" -nt "${zcompdump}.zwc") ]]; then
      zcompile "$zcompdump"
    fi
  } &!

  #load every path
  for pathfile in ${(M)config_files:#*/path.zsh}; do
    source "$pathfile"
  done

  # load every completion after autocomplete loads
  for completion in ${(M)config_files:#*/completion.zsh}; do
    source "$completion"
  done

  unset config_files

} #&& bc::cache source_all_the_things 1m 10s PWD

source_all_the_things

# you can also trigger by command **
# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
	fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
	fd --type d --hidden --follow --exclude ".git" . "$1"
}
# ref https://github.com/junegunn/fzf/wiki/examples

# disable not found
unsetopt nomatch


_evalcache direnv hook zsh
#_evalcache pyenv virtualenv-init -
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# https://starship.rs/
_evalcache starship init zsh

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
